{"version":3,"sources":["components/layout/spinner.gif","components/layout/AppNavbar.js","store.js","components/layout/Dashboard.js","components/layout/Sidebar.js","components/layout/Spinner.js","components/admins/Admins.js","components/layout/AdminDashboard.js","components/doctors/Doctors.js","components/layout/DoctorDashboard.js","components/nurses/Nurses.js","components/layout/NurseDashboard.js","components/admins/AdminDetails.js","components/doctors/DoctorDetails.js","components/nurses/NurseDetails.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AppNavbar","react_default","a","createElement","className","Link","to","type","data-toggle","data-target","id","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","compose","reactReduxFirebase","userProfile","useFirestoreForProfile","reduxFirestore","createStore","createStoreWithFirebase","combineReducers","firebaseReducer","firestore","firestoreReducer","settings","JSON","parse","localStorage","getItem","window","__REDUX_DEVTOOLS_EXTENSION__","Dashboard","Sidebar","Spinner","src","spinner","alt","style","width","margin","display","Admins","admins","this","props","length","map","admin","key","firstName","lastName","email","phone","concat","firestoreConnect","collection","connect","state","ordered","AdminDashboard","admins_Admins","Doctors","doctors","class","doctor","totalCount","count","DoctorDashboard","doctors_Doctors","Nurses","nurses","nurse","status","duty","NurseDashboard","nurses_Nurses","AdminDetails","onClick","onDeleteClick","storeAs","doc","match","params","_ref","DoctorDetails","onIncrease","e","_this","setState","Object","defineProperty","onDecrease","_this2","classnames","text-danger","text-success","parseInt","href","NurseDetails","App","es","HashRouter","layout_AppNavbar","Switch","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.30254050.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.2f2ad951.gif\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass AppNavbar extends Component {\r\n  render() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-md navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n            <Link to=\"/\" className=\"navbar-brand\">\r\n                Admin Panel\r\n            </Link>\r\n\r\n            <button\r\n                className=\"navbar-toggler\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#navbarMain\">\r\n                    <span className=\"navbar-toggler-icon\"></span>                \r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarMain\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\">\r\n                            Dashboard\r\n                        </Link>\r\n                    </li>\r\n\r\n                </ul>\r\n\r\n            </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AppNavbar;\r\n","import { createStore, combineReducers, compose } from 'redux';\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport { reactReduxFirebase, firebaseReducer } from 'react-redux-firebase';\r\nimport { reduxFirestore, firestoreReducer } from 'redux-firestore';\r\n//Reducers\r\n//@todo\r\n// import notifyReducer from './reducers/notifyReducer';\r\n// import settingsReducer from './reducers/settingsReducer';\r\n\r\nconst firebaseConfig={\r\n    apiKey: \"AIzaSyDwp_dHndzHrU81qc0vHR9eeOnS5Ynvn-A\",\r\n    authDomain: \"patient-8442a.firebaseapp.com\",\r\n    databaseURL: \"https://patient-8442a.firebaseio.com\",\r\n    projectId: \"patient-8442a\",\r\n    storageBucket: \"patient-8442a.appspot.com\",\r\n    messagingSenderId: \"79766940219\"\r\n};\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n    userProfile: 'users',\r\n    useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n  };\r\n\r\n// Initialize firebase instance\r\nfirebase.initializeApp(firebaseConfig)\r\n//Initialize firestore\r\n// const firestore=firebase.firestore();\r\n\r\n// const settings = {timestampsInSnapshots: true};\r\n//   firestore.settings(settings);\r\n\r\n\r\n// Add reactReduxFirebase enhancer when making store creator\r\nconst createStoreWithFirebase = compose(\r\n    reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\r\n    reduxFirestore(firebase) // <- needed if using firestore\r\n  )(createStore);\r\n\r\n  // Add firebase to reducers\r\nconst rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer, // <- needed if using firestore\r\n    // notify:notifyReducer,\r\n    // settings: settingsReducer,\r\n  });\r\n\r\n//Check for settings in Local Storage\r\n/*if(localStorage.getItem('settings')==null){\r\n  //Default settings\r\n  const defaultSettings={\r\n    disableBalanceOnAdd: true, \r\n    disableBalanceOnEdit: false,\r\n    allowRegistration: false\r\n  }\r\n\r\n  //Set to LocalStorage\r\n  localStorage.setItem('settings', JSON.stringify(defaultSettings))\r\n}*/\r\n\r\n// Create initial state\r\nconst initialState = {settings: JSON.parse(localStorage.getItem('settings'))};\r\n\r\n//Create Store\r\nconst store = createStoreWithFirebase(rootReducer, initialState, compose(\r\n    reactReduxFirebase(firebase),\r\n    //window.__REDUX_DEVTOOLS_EXTENTION__ && window.__REDUX_DEVTOOLS_EXTENTION__()\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)) ;\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default  () => {\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/admins\" className=\"nav-link\">\r\n                     Admin\r\n                </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/doctors\" className=\"nav-link\">\r\n                     Doctor\r\n                </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/nurses\" className=\"nav-link\">\r\n                     Nurse\r\n                </Link>\r\n            </li>\r\n\r\n        </ul>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default () => {\r\n  return (\r\n    <Link to=\"/admin/add\" className=\"btn btn-success btn-block\">\r\n        <i className=\"fas fa-plus\"></i> New\r\n    </Link>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n        <img \r\n            src={spinner} \r\n            alt=\"Loading...\" \r\n            style={{width:'200px' , margin:'auto', display:'block'}}\r\n        />\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nclass Admins extends Component {\r\n\r\n  render() {\r\n    const {admins}= this.props;\r\n  //   const admins=[\r\n  //     {\r\n  //       id:'46646',\r\n  //       firstName:'Bhanuka',\r\n  //       lastName:'Rathnayaka',\r\n  //       email:'bhanuka@gmail.com',\r\n  //       phone:'0718899365',\r\n  //     },\r\n\r\n  //     {\r\n  //       id:'214545',\r\n  //       firstName:'Udara',\r\n  //       lastName:'Wanasinhe',\r\n  //       email:'udara@gmail.com',\r\n  //       phone:'0718846578',\r\n  //     },\r\n  // ]\r\n\r\n    if(admins){\r\n      return (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <h2>\r\n                {' '}\r\n                <i className=\"fas fa-users\"></i> Admins{ ' '}\r\n              </h2>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                <h5 className=\"text-right text-secondary\">\r\n                    Total Admins{' '}\r\n                    <span className=\"text-primary\">\r\n                        {admins.length}\r\n                    </span>\r\n                </h5>\r\n            </div>\r\n          </div>\r\n\r\n          <table className=\"table table-striped\">\r\n            <thead className=\"thead-inverse\">\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {admins.map(admin => (\r\n                <tr key={admin.id}>\r\n                  <td> {admin.firstName} {admin.lastName} </td>\r\n                  <td> {admin.email} </td>\r\n                  <td> {admin.phone} </td>\r\n                  <td> \r\n                    <Link to={`/admin/${admin.id}`} className=\"btn btn-secondary btn-sm\">\r\n                      <i className=\"fas fa-arrow-circle-right\"></i> Details\r\n                    </Link>                   \r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    }else{\r\n      return <Spinner />\r\n    }    \r\n  }\r\n}\r\n\r\nAdmins.propTypes={\r\n  firestore: PropTypes.object.isRequired,\r\n  admins: PropTypes.array.isRequired\r\n}\r\n\r\nexport default compose(\r\n  firestoreConnect([{ collection : 'admins'}]),\r\n  connect((state, props) => ({\r\n    admins: state.firestore.ordered.admins\r\n  }))\r\n)(Admins);\r\n","import React from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport Admins from '../admins/Admins';\r\n//import { Link } from 'react-router-dom';\r\n\r\nexport default  () => {\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n          <div className=\"col-md-10\">\r\n            <Admins />\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <Sidebar />\r\n          </div>             \r\n        </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nclass Doctors extends Component {\r\n  render() {\r\n    const {doctors}= this.props;\r\n  //   const doctors=[\r\n  //     {\r\n  //       id:'46646',\r\n  //       firstName:'Palinda',\r\n  //       lastName:'Meegasooriya',\r\n  //       email:'pali@gmail.com',\r\n  //       phone:'0718899335',\r\n  //       field:'Surgery',\r\n  //       totalCount:\"100\",\r\n  //       count:'12'\r\n  //     },\r\n\r\n  //     {\r\n  //       id:'214545',\r\n  //       firstName:'Anuradha',\r\n  //       lastName:'Herath',\r\n  //       email:'anuradha@gmail.com',\r\n  //       phone:'0789966445',\r\n  //       field:'dental',\r\n  //       totalCount:\"75\",\r\n  //       count:'25'\r\n  //     },\r\n  // ]\r\n  if(doctors){\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <h2>\r\n              {' '}\r\n              <i class=\"fas fa-user-md\"></i> Doctors{ ' '}\r\n            </h2>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <h5 className=\"text-right text-secondary\">\r\n              Total Doctors{' '}\r\n                <span className=\"text-primary\">\r\n                    {doctors.length}\r\n                </span>\r\n              </h5>\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"table table-striped\">\r\n          <thead className=\"thead-inverse\">\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Phone</th>\r\n              <th>Total Patient</th>\r\n              <th>Count</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {doctors.map(doctor => (\r\n              <tr key={doctor.id}>\r\n                <td> {doctor.firstName} {doctor.lastName} </td>\r\n                <td> {doctor.email} </td>\r\n                <td> {doctor.phone} </td>\r\n                <td> {doctor.totalCount} </td>\r\n                <td> {doctor.count} </td>\r\n                <td> \r\n                  <Link to={`/doctor/${doctor.id}`} className=\"btn btn-secondary btn-sm\">\r\n                    <i className=\"fas fa-arrow-circle-right\"></i> Details\r\n                  </Link>                   \r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }else{\r\n    return <Spinner />\r\n  }  \r\n  }\r\n}\r\n\r\nDoctors.propTypes={\r\n  firestore: PropTypes.object.isRequired,\r\n  doctors: PropTypes.array.isRequired\r\n}\r\n\r\nexport default compose(\r\n  firestoreConnect([{ collection : 'doctors'}]),\r\n  connect((state, props) => ({\r\n    doctors: state.firestore.ordered.doctors\r\n  }))\r\n)(Doctors);\r\n","import React from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport Doctors from '../doctors/Doctors';\r\n//import { Link } from 'react-router-dom';\r\n\r\nexport default  () => {\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n          <div className=\"col-md-10\">\r\n            <Doctors />\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <Sidebar />\r\n          </div>             \r\n        </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nclass Nurses extends Component {\r\n    render() {\r\n      const {nurses}= this.props;\r\n    //   const nurses=[\r\n    //     {\r\n    //       id:'46646',\r\n    //       firstName:'Sadheera',\r\n    //       lastName:'Mahannama',\r\n    //       email:'sadhee@gmail.com',\r\n    //       phone:'0778899235',\r\n    //       status:\"Active\",\r\n    //       duty:'7-5'\r\n    //     },\r\n  \r\n    //     {\r\n    //       id:'214545',\r\n    //       firstName:'Dulanga',\r\n    //       lastName:'Heshan',\r\n    //       email:'dulanga@gmail.com',\r\n    //       phone:'0779944568',\r\n    //       status:\"Off\",\r\n    //       duty:'6-2'\r\n    //     },\r\n    // ]\r\n    if(nurses){\r\n      return (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <h2>\r\n                {' '}\r\n                <i class=\"fas fa-notes-medical\"></i> Nurses{ ' '}\r\n              </h2>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <h5 className=\"text-right text-secondary\">\r\n                    Total Nurses{' '}\r\n                    <span className=\"text-primary\">\r\n                        {nurses.length}\r\n                    </span>\r\n                </h5>\r\n            </div>\r\n          </div>\r\n  \r\n          <table className=\"table table-striped\">\r\n            <thead className=\"thead-inverse\">\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>Status</th>\r\n                <th>Duty</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n  \r\n            <tbody>\r\n              {nurses.map(nurse => (\r\n                <tr key={nurse.id}>\r\n                  <td> {nurse.firstName} {nurse.lastName} </td>\r\n                  <td> {nurse.email} </td>\r\n                  <td> {nurse.phone} </td>\r\n                  <td> {nurse.status} </td>\r\n                  <td> {nurse.duty} </td>\r\n                  <td> \r\n                    <Link to={`/nurse/${nurse.id}`} className=\"btn btn-secondary btn-sm\">\r\n                      <i className=\"fas fa-arrow-circle-right\"></i> Details\r\n                    </Link>                   \r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    }else{\r\n      return <Spinner />\r\n    }  \r\n    }\r\n  }\r\n\r\n\r\n  Nurses.propTypes={\r\n    firestore: PropTypes.object.isRequired,\r\n    doctors: PropTypes.array.isRequired\r\n  }\r\n  \r\n  export default compose(\r\n    firestoreConnect([{ collection : 'nurses'}]),\r\n    connect((state, props) => ({\r\n      nurses: state.firestore.ordered.nurses\r\n    }))\r\n  )(Nurses);\r\n  ","import React from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport Nurses from '../nurses/Nurses';\r\n//import { Link } from 'react-router-dom';\r\n\r\nexport default  () => {\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n          <div className=\"col-md-10\">\r\n            <Nurses />\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <Sidebar />\r\n          </div>             \r\n        </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport Spinner from '../layout/Spinner';\r\n//import classnames from 'classnames';\r\n\r\nclass AdminDetails extends Component {\r\n  render() {\r\n      const { admin }=this.props;\r\n\r\n      if(admin){\r\n          return(\r\n            <div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <Link to=\"/\" className=\"btn btn-link\">\r\n                        <i className=\"fas fa-arrow-circle-left\"></i>Back To Dashboard\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"btn-group float-right\">\r\n                        <Link to={`/admin/edit/${admin.id}`} className=\"btn btn-dark\">\r\n                        Edit\r\n                        </Link>\r\n                        <button onClick={this.onDeleteClick} className=\"btn btn-danger\" >\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"card\">\r\n                <h3 className=\"card-header\">\r\n                    {admin.firstName} {admin.lastName}\r\n                </h3>\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 col-sm-6\">\r\n                            <h4>Client ID:{' '} <span className=\"text-secondary\">{admin.id}</span></h4>\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-6\">\r\n                            {/* <h3 className=\"pull-right\">\r\n                                Balance: \r\n                                <span \r\n                                    className={classnames({\r\n                                        'text-danger':client.balance > 0,\r\n                                        'text-success': client.balance===0\r\n                                    })}>\r\n                                    ${parseFloat(client.balance).toFixed(2)}\r\n                                </span>\r\n                                <small>\r\n                                    <a href=\"#!\" onClick={()=>this.setState({ showBalanceUpdate: !this.state.showBalanceUpdate})}>\r\n                                        <i className=\"fas fa-pencil-alt\"></i>\r\n                                    </a>\r\n                                </small>\r\n                            </h3>       \r\n                            {balanceForm} */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">Contact Email: {admin.email}</li>\r\n                        <li className=\"list-group-item\">Contact Phone: {admin.phone}</li>\r\n                    </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n      }else{\r\n          return <Spinner />\r\n      }\r\n  }\r\n};\r\n\r\nAdminDetails.propTypes={\r\n    firestore: PropTypes.object.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(props => [\r\n        { collection:'admins', storeAs:'admin', doc: props.match.params.id}\r\n    ]),\r\n    connect(({ firestore: { ordered }}, props) => ({\r\n      admin: ordered.admin && ordered.admin[0]\r\n    }))\r\n  )(AdminDetails);\r\n  ","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport Spinner from '../layout/Spinner';\r\nimport classnames from 'classnames';\r\n\r\nclass DoctorDetails extends Component {\r\n    \r\n    onIncrease=(e)=>{\r\n        this.setState({[e.count]: e.count+1})\r\n    }\r\n\r\n    onDecrease=()=>{\r\n        this.props.doctor.count++;\r\n    }\r\n\r\n  render() {\r\n      const { doctor }=this.props;     \r\n\r\n      if(doctor){\r\n          return(\r\n            <div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <Link to=\"/\" className=\"btn btn-link\">\r\n                        <i className=\"fas fa-arrow-circle-left\"></i>Back To Dashboard\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"btn-group float-right\">\r\n                        <Link to={`/doctor/edit/${doctor.id}`} className=\"btn btn-dark\">\r\n                        Edit\r\n                        </Link>\r\n                        <button onClick={this.onDeleteClick} className=\"btn btn-danger\" >\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"card\">\r\n                <h3 className=\"card-header\">\r\n                    {doctor.firstName} {doctor.lastName}\r\n                </h3>\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 col-sm-6\">\r\n                            <h4>Client ID:{' '} <span className=\"text-secondary\">{doctor.id}</span></h4>\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-6\">\r\n                            <h3 className=\"pull-right\">\r\n                                Count: \r\n                                <span \r\n                                    className={classnames({\r\n                                        'text-danger':doctor.count > 0,\r\n                                        'text-success': doctor.count ===0\r\n                                    })}>\r\n                                    {parseInt(doctor.count)}\r\n                                </span>\r\n    \r\n                                <small>\r\n                                    <a href=\"#!\" onClick={()=>this.onIncrease}>\r\n                                    <i class=\"fas fa-chevron-up\"></i>                                    \r\n                                    </a>\r\n                                    <a href=\"#!\" onClick={()=>this.onDecrease}>\r\n                                    <i class=\"fas fa-chevron-down\"></i>                                    \r\n                                    </a>\r\n                                </small>\r\n                            </h3>       \r\n                            {/* {balanceForm} */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">Contact Email: {doctor.email}</li>\r\n                        <li className=\"list-group-item\">Contact Phone: {doctor.phone}</li>\r\n                        <li className=\"list-group-item\">Contact Phone: {doctor.totalCount}</li>\r\n                    </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n      }else{\r\n          return <Spinner />\r\n      }\r\n  }\r\n};\r\n\r\nDoctorDetails.propTypes={\r\n    firestore: PropTypes.object.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(props => [\r\n        { collection:'doctors', storeAs:'doctor', doc: props.match.params.id}\r\n    ]),\r\n    connect(({ firestore: { ordered }}, props) => ({\r\n        doctor: ordered.doctor && ordered.doctor[0]\r\n    }))\r\n  )(DoctorDetails);\r\n  ","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport Spinner from '../layout/Spinner';\r\nclass NurseDetails extends Component {\r\n  render() {\r\n      const { nurse }=this.props;\r\n\r\n      if(nurse){\r\n          return(\r\n            <div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <Link to=\"/\" className=\"btn btn-link\">\r\n                        <i className=\"fas fa-arrow-circle-left\"></i>Back To Dashboard\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"btn-group float-right\">\r\n                        <Link to={`/admin/edit/${nurse.id}`} className=\"btn btn-dark\">\r\n                        Edit\r\n                        </Link>\r\n                        <button onClick={this.onDeleteClick} className=\"btn btn-danger\" >\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"card\">\r\n                <h3 className=\"card-header\">\r\n                    {nurse.firstName} {nurse.lastName}\r\n                </h3>\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 col-sm-6\">\r\n                            <h4>Client ID:{' '} <span className=\"text-secondary\">{nurse.id}</span></h4>\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-6\">\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">Contact Email: {nurse.email}</li>\r\n                        <li className=\"list-group-item\">Contact Phone: {nurse.phone}</li>\r\n                    </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n      }else{\r\n          return <Spinner />\r\n      }\r\n  }\r\n};\r\n\r\nNurseDetails.propTypes={\r\n    firestore: PropTypes.object.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(props => [\r\n        { collection:'nurses', storeAs:'nurse', doc: props.match.params.id}\r\n    ]),\r\n    connect(({ firestore: { ordered }}, props) => ({\r\n        nurse: ordered.nurse && ordered.nurse[0]\r\n    }))\r\n  )(NurseDetails);\r\n  ","import React, { Component } from 'react';\nimport AppNavbar from './components/layout/AppNavbar';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport Dashboard from './components/layout/Dashboard';\n//import Admin from './components/admins/Admin';\nimport AdminDashboard from './components/layout/AdminDashboard';\nimport DoctorDashboard from './components/layout/DoctorDashboard';\nimport NurseDashboard from './components/layout/NurseDashboard';\nimport AdminDetails from './components/admins/AdminDetails';\nimport DoctorDetails from './components/doctors/DoctorDetails';\nimport NurseDetails from './components/nurses/NurseDetails';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n        <div className=\"App\">\n        <AppNavbar />\n        <div className=\"container\">\n          <Switch>\n              <Route \n                exact \n                path=\"/\" \n                component={Dashboard } \n              />\n\n              <Route \n                exact \n                path=\"/admins\" \n                component={AdminDashboard } \n              />\n\n              <Route \n                exact \n                path=\"/doctors\" \n                component={DoctorDashboard } \n              />\n\n              <Route \n                exact \n                path=\"/nurses\" \n                component={NurseDashboard } \n              />\n\n              <Route \n                exact \n                path=\"/admin/:id\" \n                component={AdminDetails } \n              />\n\n              <Route \n                exact \n                path=\"/doctor/:id\" \n                component={DoctorDetails } \n              />\n\n              <Route \n                exact \n                path=\"/nurse/:id\" \n                component={NurseDetails } \n              />\n          </Switch>\n        </div>\n        </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}